ServerHost = localhost
ServerPort = $(MOOS_PORT)
Community  = $(VNAME)

SWIMMER_SECTORS = 8
VEHICLE_SECTORS = 8

#include plugs.moos <origin_warp>

//------------------------------------------------------------
Processconfig = ANTLER
{
  MSBetweenLaunches = 50

  Run = MOOSDB             @ NewConsole = false

#ifdef TRIM no
  Run = pLogger            @ NewConsole = false
#endif
  Run = pNodeReporter      @ NewConsole = false

  Run = pHelmIvP           @ NewConsole = false
  Run = uProcessWatch      @ NewConsole = false
  Run = pContactMgrV20     @ NewConsole = false
  Run = pShare             @ NewConsole = false
  Run = pHostInfo          @ NewConsole = false

  Run = uFldNodeBroker     @ NewConsole = false
  Run = uFldMessageHandler @ NewConsole = false
  Run = uTimerScript       @ NewConsole = false
  Run = pRealm             @ NewConsole = false
  Run = uTimerScript       @ NewConsole = false ~uTSLogSetup
#ifdef VROLE rescue
  Run = pSectorSense       @ NewConsole = false
#endif

#ifdef XMODE SIM
  Run = uSimMarineV22      @ NewConsole = false
#elseifdef XMODE M300
  Run = iM300              @ NewConsole = false
  Run = iM300Health        @ NewConsole = false
  Run = pMarinePIDV22      @ NewConsole = false
  Run = pCBF               @ NewConsole = false
  Run = pCollisionDetectLookout @ NewConsole = false

#endif

	}

#ifdef XMODE SIM
#include plugs.moos <uSimMarineV22>
#elseifdef XMODE M300
#include plugs.moos <iM300>
#include plugs.moos <iM300Health>
#endif

#include plugs.moos <pShare>
#include plugs.moos <pHostInfo>
#include plugs.moos <uProcessWatch>

//-------------------------------------------
// pHelmIvP config block

ProcessConfig = pHelmIvP
{
  AppTick    = 4
  CommsTick  = 4

  ok_skew     = any

  app_logging = true
  behaviors   = targ_$(VNAME).bhv
  verbose     = false
  domain      = course:0:359:360
  domain      = speed:0:3:31
  hold_on_app = pContactMgrV20

	goals_mandatory = true
}

//------------------------------------------
// pSectorSense config block

ProcessConfig = pSectorSense
{
   AppTick   = 4
   CommsTick = 4

   sensor_rad     = $(OBSERVATION_RADIUS)
   saturation_rad = 5
   num_swimmer_sectors = $(SWIMMER_SECTORS)
   num_vehicle_sectors = $(VEHICLE_SECTORS)

#ifdef R_SENSE_VEHICLES yes
   sense_vehicles = true
#else
   sense_vehicles = false
#endif
   visualize_swim_sectors = true
   visualize_vehicle_sectors = true
   arc_points     = 3

}

//------------------------------------------
// uTimerScript config block

ProcessConfig = uTimerScript
{
  reset_max  = unlimited
	reset_time = end

#ifdef VROLE rescue
  event      = var=RESCUE_REQUEST, val=vname=$(VNAME), time=1
#elseifdef VROLE scout
  event      = var=SCOUT_REQUEST, val="vname=$(VNAME),tmate=$(TMATE)", time=1
#endif
}

//------------------------------------------
// pRealm config block

ProcessConfig = pRealm
{
  AppTick   = 4
  CommsTick = 4

	hist_var = MOB_ALERT
	hist_var = FOUND_SWIMMER
	scope_set = name=msgs, vars=MOB_ALERT:FOUND_SWIMMER
}

//--------------------------------------------------
// uFldMessageHandler config block

ProcessConfig = uFldMessageHandler
{
  AppTick   = 3
  CommsTick = 3

  strict_addressing = false
}

//--------------------------------------------------
// uFldNodeBroker config block

ProcessConfig = uFldNodeBroker
{
  AppTick   = 1
  CommsTick = 1

  try_shore_host = pshare_route=$(SHORE_IP):$(SHORE_PSHARE)

  bridge = src=COLREGS_AVOID_MODE
  bridge = src=AVDCOL_MODE
  bridge = src=VIEW_POLYGON
  bridge = src=VIEW_POINT
  bridge = src=VIEW_SEGLIST
	bridge = src=VIEW_CIRCLE
  bridge = src=APPCAST
  bridge = src=BCM_DETECTION_DIST
  bridge = src=NODE_REPORT_LOCAL,  alias=NODE_REPORT
  bridge = src=NODE_MESSAGE_LOCAL, alias=NODE_MESSAGE
	bridge = src=VIEW_COMMS_PULSE

	bridge = src=RESCUE_REQUEST
	bridge = src=SCOUT_REQUEST
}

//--------------------------------------------------------
// pContactMgrV20 config block

ProcessConfig = pContactMgrV20
{
  AppTick   = 2
  CommsTick = 2

  decay = 30,60

  alert_verbose = true

	post_all_ranges = true

  contact_max_age = 35
	display_radii_id = avd
  display_radii = false
  alert_range_color = gray70
  cpa_range_color   = gray30

	hold_alerts_for_helm = true
}


//--------------------------------------------------------
// pNodeReporter config block

ProcessConfig = pNodeReporter
{
  AppTick     = 4
  CommsTick   = 4

#ifdef VROLE rescue
	platform_type  = KAYAK
#elseifdef VROLE fixed
	platform_type  = KAYAK
#elseifdef VROLE scout
  platform_type  = heron
#else
  platform_type  = ship
#endif
	platform_length = 3

	platform_color = $(COLOR)

	platform_group = $(VUSER="grp")

	allow_color_change = true
}


//---------------------------------------
// pMarinePIDV22 Config Block

ProcessConfig = pMarinePIDV22
{
  AppTick    = 4
  CommsTick  = 4

	deprecated_ok = true

  verbose       = true
  depth_control = false
  active_start  = true

  // Yaw PID controller (Set for M300)
#ifdef XMODE SIM
  yaw_pid_kp             = 1.5
  yaw_pid_ki             = 0.5
#elseifdef XMODE M300
  yaw_pid_kp             = 0.9
  yaw_pid_ki             = 0.3
#endif
  yaw_pid_kd             = 0.3
  yaw_pid_integral_limit = 0.3

  // Speed PID controller
  speed_pid_kp           = 1.0
  speed_pid_kd           = 0.0
  speed_pid_ki           = 0.0
  speed_pid_integral_limit = 0.07

  // Maximums
  maxrudder  = 100 // 100
  maxthrust  = 100

  // A non-zero SPEED_FACTOR overrides use of SPEED_PID
  // Will set DESIRED_THRUST = DESIRED_SPEED * SPEED_FACTOR
  //SPEED_FACTOR = 20
}


//--------------------------------------------------
// pLogger Config Block
#ifdef TRIM no
ProcessConfig = pLogger
{
  AppTick 	= 10
  CommsTick = 10

  File      = LOG_%(VNAME)
  PATH      = $(LOGDIR)
  AsyncLog  = true
#ifdef NOSTAMP yes
  FileTimeStamp = false
#elseifdef NOSTAMP no
  FileTimeStamp = true
#endif

  Log = IVPHELM_LIFE_EVENT @ 0 nosync
  Log = SURVEY_UPDATE @ 0 nosync
  Log = TEAM_ROSTER_DEBUG @ 0 nosync
  Log = TSK_DEBUG @ 0 nosync
  Log = TASK_DEBUG @ 0 nosync
  Log = H_DEBUG @ 0 nosync


  // Log it all!!!!!
  LogAuxSrc = true
  WildCardLogging = true
  WildCardOmitPattern = *_STATUS
  WildCardOmitPattern = APPCAST
  WildCardOmitPattern = DB_VARSUMMARY
  WildCardOmitPattern = DB_RWSUMMARY

  CompressAlogs = false
}
#endif

//--------------------------------------------------------
// pSimpleControl config block

ProcessConfig = pSimpleControl
{
  AppTick     = 4
  CommsTick   = 4

  rudder_gain = 0.1
  constant_thust = 20

}

//-------------------------------------------------
// pCBF config block
ProcessConfig = pCBF
{
  AppTick   = 8
  CommsTick = 8

   safety_radius = 13.0

           delta = 1.0  // Multiplication constant
                        // alpha(x) = -delta * x

            gamma = 3.0 // lin param

     flip_rudder = true // needed for the naval convention

    stale_thresh = 2.0  // staleness thresh for state.
                        // If info for contact
                        // meets this criteria, then the cbf is
                        // active

own_control_stale_thresh  = 0.5 // If own control input is stale
                                // all control inputs set to zero


state_window_size = 1.0 // All own state messages (NAV_X, etc)
                        // and node records (NODE_RECORD)
                        // must be within this window size to be
                        // considered a complete record and
                        // uploaded to the cbf.

input_window_size = 0.5 // All own control messages
                        // (DESIRED_RUDDER, etc) must be within
                        // this window size to be considered a
                        // complete record and uploaded to the
                        // cbf.

    debug_verbose = false   // true or [false]

  preCBF_varname_postfix = _PRECBF  // the app will listen for
                                    // input variables that are
                                    // listed in the control
                                    // constraints with this
                                    // post fix.
                                    // Ex. DESIRED_RUDDER_PRECBF


     control_constraints = DESIRED_RUDDER=-100.0:100.0;100.0,DESIRED_THRUST=0.0:100.0;50

              			    // Where the syntax is:
              			    // <ctrl_input_name>=<min_val>:<max_val>;<gain>
              			    // values can be doubles or INF for infinite
				    // For simple cbf the gain is the value that maps
				    // control input to velocities when linearizing.
				    // Ex for DESIRED_THRUST this can be:
				    // vehicle fwd speed = gain * DESIRED_THRUST


    // adversarial related
    ignore_adversarial_agents = false
    share_control_inputs      = false
    max_adversary_speed       = 2.0
    max_adversary_yaw_rate    = 1.0

    app_logging = log
}



//------------------------------------------------
// pCollisionDetectLookout config block

ProcessConfig = pCollisionDetectLookout
{
   AppTick   = 4
   CommsTick = 4

   	     verbose_visuals = true    // default is false
   post_moos_manual_override = true    // default is true
   	     post_rev_thrust = true    // default is false

    emergency_rev_thrust_cmd = -70.0

   own_state_stale_thresh = 1.0
   stale_node_rec_thresh  = 2.0

   nominal_fwd_reachable_set = pts={0.0,0.0:3.0,10.0:2.0,11.0:1.0,11.5:-1.0,11.5:-2.0,11.0:-3.0,10.0}
   nominal_fwd_speed = 2.0


}


//------------------------------------------------------------
// uTimerScript configuration block
  
ProcessConfig = uTSLogSetup
{
    AppTick   = 1
    CommsTick = 1
  
    paused      = false
    delay_start = 10
    script_name = uTS_Logger_command
    event  = var=PLOGGER_CMD, val="COPY_FILE_REQUEST=$(NEURAL_NETWORK_CONFIG)", time=0
}